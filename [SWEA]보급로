#include<cstdio>
#include<cstring>
#include<queue>
using namespace std;
const int MAX = 105;

int T, N, arr[MAX][MAX], dist[MAX][MAX];
int dx[]={0,0,1,-1};
int dy[]={1,-1,0,0};
bool visited[MAX][MAX];

int bfs() {
    queue <pair <int, int> > q;
    visited[0][0] = true;
    dist[0][0] = 0;
    q.push({0, 0}); 
    
    while (!q.empty()) {
        int x = q.front().first;
        int y = q.front().second;
        q.pop();
        
        for (int i = 0; i < 4; i++) {
            int nx = x + dx[i];
            int ny = y + dy[i];
            
            if(nx < 0 || nx >= N || ny < 0 || ny >= N) continue;
            
            if (!visited[nx][ny] || dist[nx][ny] > dist[x][y] + arr[nx][ny]) {
                visited[nx][ny] = true;
                dist[nx][ny] = dist[x][y] + arr[nx][ny];
                q.push({nx, ny});
            }
        }
    }
    return dist[N - 1][N - 1];
}

int main() {
    scanf("%d", &T);
    for(int t=1;t<=T;t++) {
        memset(arr,0,sizeof(arr));
        memset(dist,0,sizeof(dist));
        memset(visited,false,sizeof(visited));
        
        scanf("%d", &N); 
        for(int i=0;i<N;i++){
            for(int j=0;j<N;j++) {
                scanf("%1d", &arr[i][j]);
            }
        }
        printf("#%d %d\n", t, bfs());
    }
    return 0;
}
