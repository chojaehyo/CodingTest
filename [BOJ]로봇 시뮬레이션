#include <stdio.h>
const int MAX = 105;

int A, B, N, M;
int arr[MAX][MAX];
int dx[] = {1, 0, -1, 0};
int dy[] = {0, -1, 0, 1};
struct info{
  int x, y, dir;
};
info R[MAX];

int get_result(int robot, char ord){
  if(ord == 'L') {
      R[robot].dir = (R[robot].dir+3)%4;
      return 1;
  }
  else if(ord == 'R') {
      R[robot].dir = (R[robot].dir+1)%4;
      return 1;
  }
  else{
    arr[R[robot].x][R[robot].y] = 0;
    int nx = R[robot].x+dx[R[robot].dir];
    int ny = R[robot].y+dy[R[robot].dir];
    if(nx < 1 || nx > A || ny < 1 || ny > B) {
      printf("Robot %d crashes into the wall", robot);
      return -1;
    }
    else if(arr[nx][ny] != 0){
      printf("Robot %d crashes into robot %d", robot, arr[nx][ny]);
      return -1;
    }
    else{
      arr[nx][ny] = robot;
      R[robot].x = nx, R[robot].y = ny;
      return 1;
    }
  }
}
int main(){
  scanf("%d %d", &A, &B);
  scanf("%d %d", &N, &M);
  for(int i=1;i<=N;i++){
    char tmp;
    scanf("%d %d %c", &R[i].x, &R[i].y, &tmp);
    arr[R[i].x][R[i].y] = i;
    if(tmp == 'E') R[i].dir = 0;
    else if(tmp == 'W') R[i].dir = 2;
    else if(tmp == 'S') R[i].dir = 1;
    else R[i].dir = 3;
  }
  for(int i=1;i<=M;i++){
    int r_num, repeat;
    char order;
    scanf("%d %c %d", &r_num, &order, &repeat);
    for(int j=1;j<=repeat;j++) {
      int val = get_result(r_num, order);
      if(val == -1) return 0;
    }
  }
  printf("OK\n");
  return 0;
}
