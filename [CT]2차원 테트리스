#include <cstdio>

int k, t, x, y, board[15][15], score;

void remove(int type, int start){
    if(type == 1){
        for(int i=start-1;i>=4;i--){
            for(int j=0;j<=3;j++){
                board[i+1][j] = board[i][j];
                board[i][j] = 0;
            }
        }
    }
    else{
        for(int i=start-1;i>=4;i--){
            for(int j=0;j<=3;j++){
                board[j][i+1] = board[j][i];
                board[j][i] = 0;
            }
        }
    }
}

void check_fill(){
    int idx = 9;

    while(idx > 4){
        int cnt = 0;
        for(int i=0;i<=3;i++){
            if(board[idx][i]) cnt++;
        }
        if(cnt == 4){
            score++;
            remove(1, idx);
        }
        else idx--;
    }
    idx = 9;
    while(idx > 4){
        int cnt = 0;
        for(int i=0;i<=3;i++){
            if(board[i][idx]) cnt++;
        }
        if(cnt == 4){
            score++;
            remove(2, idx);
        }
        else idx--;
    }
}

void check_special_area(){
    int cnt = 0;
    for(int i=5;i>=4;i--){
        for(int j=0;j<=3;j++) {
            if (board[i][j]) {
                cnt++;
                break;
            }
        }
    }
    for (int i = 0; i < cnt; i++) remove(1, 9);

    cnt = 0;
    for(int i=5;i>=4;i--){
        for(int j=0;j<=3;j++) {
            if (board[j][i]) {
                cnt++;
                break;
            }
        }
    }
    for (int i = 0; i < cnt; i++) remove(2, 9);
}

void move(int type, int x, int y){
    int i;
    bool flag = false;
    if (type == 1){
        for(i=4;i<=9;i++){
            if(board[x][i]) {
                board[x][i-1] = 1;
                flag = true;
                break;
            }
        }
        if(!flag) board[x][9] = 1;
        flag = false;

        for(i=4;i<=9;i++){
            if(board[i][y]) {
                board[i-1][y] = 1;
                flag = true;
                break;
            }
        }
        if(!flag) board[9][y] = 1;
    }
    else if(type == 2){
        for(i=4;i<=9;i++){
            if(board[x][i]) {
                board[x][i-1] = 1; board[x][i-2] = 1;
                flag = true;
                break;
            }
        }
        if(!flag) {
            board[x][8] = 1;
            board[x][9] = 1;
        }
        flag = false;

        for(int i=4;i<=9;i++){
            if(board[i][y] || board[i][y+1]) {
                board[i-1][y] = 1; board[i-1][y+1] = 1;
                flag = true;
                break;
            }
        }
        if(!flag) {
            board[9][y] = 1;
            board[9][y+1] = 1;
        }
    }
    else{
        for(int i=4;i<=9;i++){
            if(board[x][i] || board[x+1][i]) {
                board[x][i-1] = 1; board[x+1][i-1] = 1;
                flag = true;
                break;
            }
        }
        if(!flag) {
            board[x][9] = 1;
            board[x+1][9] = 1;
        }
        flag = false;
        for(int i=4;i<=9;i++){
            if(board[i][y]) {
                board[i-1][y] = 1; board[i-2][y] = 1;
                flag = true;
                break;
            }
        }
        if(!flag) {
            board[8][y] = 1;
            board[9][y] = 1;
        }
    }
}

int main(){
    scanf("%d", &k);

    for(int i=0;i<k;i++){
        scanf("%d %d %d", &t, &x, &y);
        move(t, x, y);
        check_fill();
        check_special_area();
    }

    int left_block = 0;
    for(int i=0;i<=3;i++){
        for(int j=6;j<=9;j++){
            left_block += board[i][j];
            left_block += board[j][i];
        }
    }
    printf("%d\n%d", score, left_block);
    return 0;
}
