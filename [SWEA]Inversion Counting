#include <cstdio>
const int MAX = 100005;

int T, N, arr[MAX], tmp[MAX];
long long result;

void merge(int start, int mid, int end){
    int left = start, right = mid + 1;
    int idx = start;
    
    while(left <= mid || right <= end){
        if (right > end || (left <= mid && arr[left] < arr[right])) tmp[idx++] = arr[left++];
        else {
            result += (mid - left + 1);
            tmp[idx++] = arr[right++];
        }
    }
    for (int i = start; i <= end; i++) arr[i] = tmp[i];
}

void merge_sort(int start, int end) {
    if (start < end) {

        int mid = (start + end) >> 1;
        merge_sort(start, mid);
        merge_sort(mid + 1, end);
        merge(start, mid, end);
    }
}

int main() {
    scanf("%d", &T);

    for (int t = 1; t <= T; t++) {
        result = 0;
        scanf("%d", &N);

        for (int i = 0; i < N; i++) scanf("%d", &arr[i]);

        merge_sort(0, N - 1);

        printf("#%d %lld\n", t, result);
    }
    return 0;
}
