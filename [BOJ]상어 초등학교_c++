#include <cstdio>
#include <vector>
#include <queue>
using namespace std;
const int MAX = 25;

int N, num1, num2, arr[MAX][MAX], like_arr[MAX*MAX][MAX*MAX];
int dx[] = {-1, 0, 1, 0};
int dy[] = {0, 1, 0, -1};
int satisfaction[] = {0, 1, 10, 100, 1000};
struct SEAT{
    int x, y, like, blank;
};
struct compare{
    bool operator()(SEAT a, SEAT b){
        if(a.like < b.like) return true;
        else if(a.like == b.like){
            if(a.blank < b.blank) return true;
            else if(a.blank == b.blank){
                if(a.x > b.x) return true;
                else if(a.x == b.x){
                    if(a.y > b.y) return true;
                }
            }
        }
        return false;
    }
};

SEAT find_seat(int num){
    priority_queue <SEAT, vector<SEAT>, compare> q;
    for(int i=0;i<N;i++){
        for(int j=0;j<N;j++){
            if(arr[i][j] > 0) continue;
            int like_cnt = 0, blank_cnt = 0;
            for(int d=0;d<4;d++){
                int x = i + dx[d];
                int y = j + dy[d];

                if(x < 0 || x >= N || y < 0 || y >= N) continue;
                if(arr[x][y] == 0) blank_cnt++;
                else if(like_arr[num][arr[x][y]] == 1) like_cnt++;
            }
            q.push({i, j, like_cnt, blank_cnt});
        }
    }
    return q.top();
}

int calc_satisfaction(){
    int res = 0;
    for(int i=0;i<N;i++){
        for(int j=0;j<N;j++){
            int num = arr[i][j], cnt = 0;
            for(int d=0;d<4;d++){
                int x = i + dx[d];
                int y = j + dy[d];

                if(x < 0 || x >= N || y < 0 || y >= N) continue;
                if(like_arr[num][arr[x][y]] == 1) cnt++;
            }
            res += satisfaction[cnt];
        }
    }
    return res;
}

int main(){
    scanf("%d", &N);
    for(int i=0;i<N*N;i++){
        scanf("%d", &num1);
        for(int j=0;j<4;j++){
            scanf("%d", &num2);
            like_arr[num1][num2] = 1;
        }
        SEAT cur = find_seat(num1);
        arr[cur.x][cur.y] = num1;
    }
    int result = calc_satisfaction();
    printf("%d\n", result);
    return 0;
}
