#include <stdio.h>
#include <vector>
#include <algorithm>
using namespace std;

int D, N;
vector <int> oven;
vector <int> pizza;

int get_result(int start, int end, int target){
  if(oven[start] < target) return -1;
  while(start+1 < end){
    int mid = (start+end)/2;
    if(oven[mid] >= target) start = mid;
    else end = mid;
  }
  if(oven[end] >= target) return end;
  else return start;
}
void change_oven_size(){
  int min_size = oven[0];
  for(int i=1;i<oven.size();i++){
    oven[i] = min(min_size, oven[i]);
    min_size = oven[i];
  }
}
int main(){
  scanf("%d %d", &D, &N);
  for(int i=0;i<D;i++){
    int a;
    scanf("%d", &a);
    oven.push_back(a);
  }
  for(int i=0;i<N;i++){
    int a;
    scanf("%d", &a);
    pizza.push_back(a);
  }
  change_oven_size();
  if(D < N) {
    printf("0");
    return 0;
  }
  int idx = D;
  bool flag = false;
  for(int i=0;i<N;i++){
    if(idx == 0) {
      printf("0");
      return 0;
    }
    idx = get_result(0, idx-1, pizza[i]);
  }
  printf("%d\n", idx+1);
  return 0;
}
