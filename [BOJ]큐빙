#include <stdio.h>

int n;
char cube[7][4][4], move[2];

void change_cube(int idx, int d){
  int cnt = 1;
  if(d == 2) cnt = 3;
  for(int t=1;t<=cnt;t++){
    char temp[7][4][4];
    for(int k=1;k<=6;k++){
      for(int i=1;i<=3;i++){
        for(int j=1;j<=3;j++){
          temp[k][i][j] = cube[k][i][j];
        }
      }
    }
    cube[idx][1][3] = temp[idx][1][1];
    cube[idx][2][3] = temp[idx][1][2];
    cube[idx][3][3] = temp[idx][1][3];
    cube[idx][1][2] = temp[idx][2][1];
    cube[idx][2][2] = temp[idx][2][2];
    cube[idx][3][2] = temp[idx][2][3];
    cube[idx][1][1] = temp[idx][3][1];
    cube[idx][2][1] = temp[idx][3][2];
    cube[idx][3][1] = temp[idx][3][3];
    
    if(idx == 1){
      cube[4][3][1] = temp[5][1][3];
      cube[4][3][2] = temp[5][1][2];
      cube[4][3][3] = temp[5][1][1];
      cube[6][1][3] = temp[4][3][1];
      cube[6][1][2] = temp[4][3][2];
      cube[6][1][1] = temp[4][3][3];
      cube[2][1][1] = temp[6][1][1];
      cube[2][1][2] = temp[6][1][2];
      cube[2][1][3] = temp[6][1][3];
      cube[5][1][1] = temp[2][1][1];
      cube[5][1][2] = temp[2][1][2];
      cube[5][1][3] = temp[2][1][3];
    }
    else if(idx == 2){
      cube[1][3][1] = temp[5][3][3];
      cube[1][3][2] = temp[5][2][3];
      cube[1][3][3] = temp[5][1][3];
      cube[6][1][1] = temp[1][3][1];
      cube[6][2][1] = temp[1][3][2];
      cube[6][3][1] = temp[1][3][3];
      cube[3][1][3] = temp[6][1][1];
      cube[3][1][2] = temp[6][2][1];
      cube[3][1][1] = temp[6][3][1];
      cube[5][3][3] = temp[3][1][3];
      cube[5][2][3] = temp[3][1][2];
      cube[5][1][3] = temp[3][1][1];
    }
    else if(idx == 3){
      cube[2][3][1] = temp[5][3][1];
      cube[2][3][2] = temp[5][3][2];
      cube[2][3][3] = temp[5][3][3];
      cube[6][3][1] = temp[2][3][1];
      cube[6][3][2] = temp[2][3][2];
      cube[6][3][3] = temp[2][3][3];
      cube[4][1][1] = temp[6][3][3];
      cube[4][1][2] = temp[6][3][2];
      cube[4][1][3] = temp[6][3][1];
      cube[5][3][3] = temp[4][1][1];
      cube[5][3][2] = temp[4][1][2];
      cube[5][3][1] = temp[4][1][3];
    }
    else if(idx == 4){
      cube[3][3][1] = temp[5][1][1];
      cube[3][3][2] = temp[5][2][1];
      cube[3][3][3] = temp[5][3][1];
      cube[6][3][3] = temp[3][3][1];
      cube[6][2][3] = temp[3][3][2];
      cube[6][1][3] = temp[3][3][3];
      cube[1][1][1] = temp[6][1][3];
      cube[1][1][2] = temp[6][2][3];
      cube[1][1][3] = temp[6][3][3];
      cube[5][3][1] = temp[1][1][1];
      cube[5][2][1] = temp[1][1][2];
      cube[5][1][1] = temp[1][1][3];
    }
    else if(idx == 5){
      cube[1][1][1] = temp[4][1][1];
      cube[1][2][1] = temp[4][2][1];
      cube[1][3][1] = temp[4][3][1];
      cube[2][1][1] = temp[1][1][1];
      cube[2][2][1] = temp[1][2][1];
      cube[2][3][1] = temp[1][3][1];
      cube[3][1][1] = temp[2][1][1];
      cube[3][2][1] = temp[2][2][1];
      cube[3][3][1] = temp[2][3][1];
      cube[4][1][1] = temp[3][1][1];
      cube[4][2][1] = temp[3][2][1];
      cube[4][3][1] = temp[3][3][1];
    }
    else{
      cube[1][1][3] = temp[2][1][3];
      cube[1][2][3] = temp[2][2][3];
      cube[1][3][3] = temp[2][3][3];
      cube[2][1][3] = temp[3][1][3];
      cube[2][2][3] = temp[3][2][3];
      cube[2][3][3] = temp[3][3][3];
      cube[3][1][3] = temp[4][1][3];
      cube[3][2][3] = temp[4][2][3];
      cube[3][3][3] = temp[4][3][3];
      cube[4][1][3] = temp[1][1][3];
      cube[4][2][3] = temp[1][2][3];
      cube[4][3][3] = temp[1][3][3];
    }
  }
}

void fill_cube(){
  for(int i=1;i<=3;i++){
    for(int j=1;j<=3;j++){
      cube[1][i][j] = 'w'; 
      cube[2][i][j] = 'r';
      cube[3][i][j] = 'y';
      cube[4][i][j] = 'o';
      cube[5][i][j] = 'g';
      cube[6][i][j] = 'b';
    }
  }
}

void print_top(){
  for(int i=1;i<=3;i++){
    for(int j=1;j<=3;j++){
      printf("%c", cube[1][i][j]);
    }
    printf("\n");
  }
}

int main(){
  scanf("%d", &n);
  for(int i=0;i<n;i++){
    int cnt;
    scanf("%d", &cnt);
    fill_cube();
    for(int j=0;j<cnt;j++){
      scanf("%s", move);
      int num, dir;
      if(move[0] == 'U') num = 1;
      else if(move[0] == 'F') num = 2;
      else if(move[0] == 'D') num = 3;
      else if(move[0] == 'B') num = 4;
      else if(move[0] == 'L') num = 5;
      else num = 6;
      
      if(move[1] == '+') dir = 1;
      else dir = 2;
      change_cube(num, dir);
    }
    print_top();
  }
  return 0;
}
