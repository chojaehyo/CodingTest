#include <stdio.h>
#include <queue>
using namespace std;
const int MAX = 1005;

int n, m;
int box[MAX][MAX], count[MAX][MAX];
int total;
int dx[] = {-1, 0, 1, 0};
int dy[] = {0, 1, 0, -1};
bool visited[MAX][MAX];
struct loc{
  int x, y, days;
};
queue <loc> q;

int bfs(){
  int ret;
  while(!q.empty()){
    int x = q.front().x;
    int y = q.front().y;
    int days = q.front().days;
    visited[x][y] = true;
    q.pop();
    
    for(int i=0;i<4;i++){
      int nx = x+dx[i];
      int ny = y+dy[i];
      
      if(nx < 0 || nx >= n || ny < 0 || ny >= m || box[nx][ny] == -1 || box[nx][ny] == 1) continue;
      if(!visited[nx][ny] && !box[nx][ny]){
        visited[nx][ny] = true;
        total--;
        ret = days+1;
        q.push({nx, ny, days+1});
      }
    }
  }
  return ret;
}
int main(){
  scanf("%d %d", &m, &n);
  for(int i=0;i<n;i++){
    for(int j=0;j<m;j++){
      scanf("%d", &box[i][j]);
      if(box[i][j] == 0) total++;
    }
  }
  if(!total) printf("0\n");
  else{
    for(int i=0;i<n;i++){
      for(int j=0;j<m;j++){
        if(box[i][j] == 1){
          q.push({i, j, 0});
        }
      }
    }
    int res = bfs();
    if(total > 0) printf("-1\n");
    else printf("%d\n", res);
  }
  return 0;
}
