#include <cstdio>
#include <vector>
using namespace std;
const int MAX = 105;

struct info {
	int x, y, d;
};

int A, B, N, M, arr[MAX][MAX];
int dx[] = { -1, 0, 1, 0 };
int dy[] = { 0, 1, 0, -1 };
vector<info> robots;

bool move(int num, char com, int rep) {
	int x = robots[num].x;
	int y = robots[num].y;
	int d = robots[num].d;
	arr[x][y] = 0;

	if (com == 'F') {
		for (int i = 0; i < rep; i++) {
			int nx = x + dx[d];
			int ny = y + dy[d];

			if (nx < 0 || nx >= B || ny < 0 || ny >= A) {
				printf("Robot %d crashes into the wall", num);
				return false;
			}

			if (arr[nx][ny] > 0) {
				printf("Robot %d crashes into robot %d", num, arr[nx][ny]);
				return false;
			}

			x = nx, y = ny;
		}
	}

	else if (com == 'L') {
		for (int i = 0; i < rep; i++) d = (d + 3) % 4;
	}
	else {
		for (int i = 0; i < rep; i++) d = (d + 1) % 4;
	}

	robots[num].x = x, robots[num].y = y, robots[num].d = d;
	return true;
}

int main() {
	scanf("%d %d\n%d %d", &A, &B, &N, &M);
	robots.push_back({ 0, 0, 0 });

	for (int i = 0; i < N; i++) {
		int x, y, d;
		char dir;
		scanf("%d %d %c", &x, &y, &dir);
		
		if (dir == 'N') d = 0;
		else if (dir == 'E') d = 1;
		else if (dir == 'S') d = 2;
		else d = 3;

		arr[B - y][x - 1] = i + 1;
		robots.push_back({ B - y, x - 1, d });
	}

	bool res = true;
	for (int i = 0; i < M; i++) {
		int r_num, repeat;
		char com;

		scanf("%d %c %d", &r_num, &com, &repeat);

		res = move(r_num, com, repeat);
		if (!res) break;
	}

	if (res) printf("OK\n");
	return 0;
}
