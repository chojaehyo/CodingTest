#include <iostream>
#include <cstring>
#include <vector>
using namespace std;
const int MAX = 100005;

int T, Pi[MAX];
string B, S;

void get_pi(string p){
    for(int i = 1, j = 0; i < p.size(); i++){
        while(j > 0 && p[i] != p[j]) j = Pi[j - 1];
        if(p[i] == p[j]) Pi[i] = ++j;
    }
}

vector<int> kmp(string s, string p){
    vector<int> ans;
    get_pi(p);

    for(int i = 0, j = 0; i < s.size() ; i++){
        while(j>0 && s[i] != p[j]) j = Pi[j-1];
        if(s[i] == p[j]){
            if(j == p.size() - 1) {
                ans.push_back(i - p.size() + 1);
                j = Pi[j];
            }
            else j++;
        }
    }
    return ans;
}

int main() {
    cin >> T;
    for(int t = 1; t <= T; t++) {
        cin >> B >> S;

        memset(Pi, 0, sizeof(Pi));

        vector<int> result = kmp(B, S);
        cout << '#' << t << ' ' << result.size() << '\n';
    }
    return 0;
}

