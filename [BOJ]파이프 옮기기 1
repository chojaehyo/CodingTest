# include <cstdio>
const int MAX = 20;

int N, arr[MAX][MAX], result;
int dx[] = { 0, 1, 1 };
int dy[] = { 1, 0, 1 };

bool check(int val, int x, int y) {
	bool flag = true;
	if (val == 3) {
		for (int i = 0; i < 2; i++) {
			int nx = x + dx[i];
			int ny = y + dy[i];
			if (arr[nx][ny] != 0) {
				flag = false;
				break;
			}
		}
		int nx = x + dx[val - 1];
		int ny = y + dy[val - 1];
		if (nx < 1 || nx > N || ny < 1 || ny > N || arr[nx][ny] != 0) flag = false;

	}
	else {
		int nx = x + dx[val - 1];
		int ny = y + dy[val - 1];
		if (nx < 1 || nx > N || ny < 1 || ny > N || arr[nx][ny] != 0) flag = false;
	}
	return flag;
}

void comb(int x, int y, int pre_type) {
	if (x == N && y == N) result++;
	else {
		for (int i = 1; i <= 3; i++) {
			if (i == 1) {
				if ((pre_type == 1 || pre_type == 3) && check(i, x, y)) {
					comb(x + dx[i - 1], y + dy[i - 1], i);
				}
			}
			else if (i == 2) {
				if ((pre_type == 2 || pre_type == 3) && check(i, x, y)) {
					comb(x + dx[i - 1], y + dy[i - 1], i);
				}
			}
			else {
				if (check(i, x, y)) {
					comb(x + dx[i - 1], y + dy[i - 1], i);
				}
			}
		}
	}
}

int main() {
	scanf("%d", &N);

	for (int i = 1; i <= N; i++) {
		for (int j = 1; j <= N; j++) {
			scanf("%d", &arr[i][j]);
		}
	}
	arr[1][1] = 1;
	arr[1][2] = 1;

	comb(1, 2, 1);
	printf("%d\n", result);
	return 0;
}
