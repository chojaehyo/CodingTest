#include <cstdio>
#include <queue>
using namespace std;
const int MAX = 105;

int N, M;
int arr[MAX][MAX], dist[MAX][MAX];
int dx[] = {-1, 0, 1, 0};
int dy[] = {0, 1, 0, -1};

void get_dist(int a, int b){
  queue <pair<int, int>> q;
  q.push(make_pair(a, b));
  
  while(!q.empty()){
    int x = q.front().first;
    int y = q.front().second;
    q.pop();
    
    for(int i=0;i<4;i++){
      int nx = x + dx[i];
      int ny = y + dy[i];
      
      if (nx >= 1 && nx <= N && ny >= 1 && ny <= M){
        if(arr[nx][ny] == 1 && dist[nx][ny] == 0){
          dist[nx][ny] = dist[x][y] + 1;
          q.push(make_pair(nx, ny));
        }
      }
    }
    
  }
}

int main(){
  scanf("%d %d", &N, &M);
  
  for(int i=1;i<=N;i++){
    for(int j=1;j<=M;j++){
      scanf("%1d", &arr[i][j]);
    }
  }
  dist[1][1] = 1;
    
  get_dist(1, 1);
  
  printf("%d\n", dist[N][M]);
  return 0;
}
