#include <stdio.h>
const int MAX = 505;

int N, sand;
int arr[MAX][MAX];
int dx[] = {0, 1, 0, -1};
int dy[] = {-1, 0, 1, 0};
int move_x[4][10] = {
  {-1, 1, -1, 1, -2, 2, -1, 1, 0, 0}, 
  {0, 0, 1, 1, 1, 1, 2, 2, 3, 2}, 
  {-1, 1, -1, 1, -2, 2, -1, 1, 0, 0}, 
  {0, 0, -1, -1, -1, -1, -2, -2, -3, -2}}; 
int move_y[4][10] = {
  {0, 0, -1, -1, -1, -1, -2, -2, -3, -2},
  {-1, 1, -1, 1, -2, 2, -1, 1, 0, 0}, 
  {0, 0, 1, 1, 1, 1, 2, 2, 3, 2}, 
  {-1, 1, -1, 1, -2, 2, -1, 1, 0, 0}};

int percent[9] = {1, 1, 7, 7, 2, 2, 10, 10, 5};

bool out_range(int x, int y){
  if (x < 1 || x > N || y < 1 || y > N) return true;
  return false;
}
void move_sand(int x, int y, int dir){
  int tx = x+dx[dir];
  int ty = y+dy[dir];
  
  int total = arr[tx][ty];
  if(total == 0) return;
  arr[tx][ty] = 0;
  
  int tmp_sum = 0;
  for(int i=0;i<9;i++){
    int nx = x+move_x[dir][i];
    int ny = y+move_y[dir][i];
    
    tmp_sum += total*percent[i]/100;
    if(out_range(nx, ny)) sand += total*percent[i]/100;
    else arr[nx][ny] += total*percent[i]/100;
  }
  int nx = x+move_x[dir][9];
  int ny = y+move_y[dir][9];
  if(out_range(nx, ny)) sand += total-tmp_sum;
  else arr[nx][ny] += total-tmp_sum;
}

int main(){
  scanf("%d", &N);
  for(int i=1;i<=N;i++){
    for(int j=1;j<=N;j++){
      scanf("%d", &arr[i][j]);
    }
  }
  
  int d = 0, idx = 1, cnt = 0;
  int x = (N+1)/2, y = (N+1)/2;
  bool flag = false;
  while(1){
    if(flag) break;
      
    for(int i=0;i<idx;i++){
      move_sand(x, y, d);
      x += dx[d];
      y += dy[d];
      if(x < 1 || y < 1) {
        flag = true;
        break;
      }
    }
    d = (d+1)%4;
    cnt++;
    if(cnt == 2) {
      cnt = 0;
      idx++;
    }
  }
  printf("%d\n", sand);
  return 0;
}
