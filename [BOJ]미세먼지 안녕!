#include <cstdio>
#include <queue>
using namespace std;
const int MAX = 1005;

int R, C, T, ax, ay;
int arr[MAX][MAX], temp[MAX][MAX];
int dx[] = {-1, 0, 1, 0};
int dy[] = {0, 1, 0, -1};
struct loc{
  int x, y;
};
void clean(int xx, int yy){
  for(int i=xx-3;i>=0;i--) arr[i+1][0] = arr[i][0];
  for(int j=0;j<C-1;j++) arr[0][j] = arr[0][j+1];
  for(int i=0;i<=xx-2;i++) arr[i][C-1] = arr[i+1][C-1];
  for(int j=C-2;j>=1;j--) arr[xx-1][j+1] = arr[xx-1][j];
  arr[xx-1][1] = 0;
    
  for(int i=xx+1;i<R-1;i++) arr[i][0] = arr[i+1][0];
  for(int j=0;j<C-1;j++) arr[R-1][j] = arr[R-1][j+1];
  for(int i=R-2;i>=xx;i--) arr[i+1][C-1] = arr[i][C-1];
  for(int j=C-2;j>=1;j--) arr[xx][j+1] = arr[xx][j];
  arr[xx][1] = 0;
}
void spread(){
  queue <loc> q;
  for(int i=0;i<R;i++){
    for(int j=0;j<C;j++){
      if(arr[i][j] > 0) q.push({i, j});
    }
  }
  while(!q.empty()){
    int x = q.front().x;
    int y = q.front().y;
    q.pop();
    
    int cnt=0;
    for(int i=0;i<4;i++){
      int nx = x+dx[i];
      int ny = y+dy[i];
      
      if(nx < 0 || nx >= R || ny < 0 || ny >= C || arr[nx][ny] == -1) continue;
      cnt++;
      temp[nx][ny] += arr[x][y]/5;
    }
    temp[x][y] -= cnt*(arr[x][y]/5);
  }
}

void fill_temp(){
  for(int i=0;i<R;i++){
    for(int j=0;j<C;j++){
      temp[i][j] = arr[i][j];
    }
  }
}
void fill_arr(){
  for(int i=0;i<R;i++){
    for(int j=0;j<C;j++){
      arr[i][j] = temp[i][j];
    }
  }
}
int get_count(){
  int total = 0;
  for(int i=0;i<R;i++){
    for(int j=0;j<C;j++){
      if(arr[i][j] > 0) total += arr[i][j];
    }
  }
  return total;
}
int main(){
  scanf("%d %d %d", &R, &C, &T);
  for(int i=0;i<R;i++){
    for(int j=0;j<C;j++){
      scanf("%d", &arr[i][j]);
      if(arr[i][j] == -1) ax = i, ay = j; 
    }
  }
  for(int t=0;t<T;t++){
    fill_temp();
    spread();
    fill_arr();
    clean(ax, ay);
  }
  int res = get_count();
  printf("%d\n", res);
  return 0;
