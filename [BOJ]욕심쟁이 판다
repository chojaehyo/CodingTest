#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
const int MAX = 505;

int n, val, result, arr[MAX][MAX], dp[MAX][MAX];
bool visited[MAX][MAX];
int dx[] = { 0, 1, 0, -1 };
int dy[] = { -1, 0, 1, 0 };

int eat(int x, int y) {
	if (dp[x][y] != 0) return dp[x][y];

	dp[x][y] = 1;
	for (int i = 0; i < 4; i++) {
		int nx = x + dx[i];
		int ny = y + dy[i];

		if (nx < 0 || nx >= n || ny < 0 || ny >= n) continue;
		
		if (arr[x][y] < arr[nx][ny]) {
			dp[x][y] = max(dp[x][y], eat(nx, ny)+1);
		}
	}
	return dp[x][y];
}

int main() {
	scanf("%d", &n);

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) scanf("%d", &arr[i][j]);
	}

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			int val = eat(i, j);
			if (val > result) result = val;
		}
	}

	printf("%d\n", result);
	return 0;
}
