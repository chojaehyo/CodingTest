#include <stdio.h>
#include <cstring>
using namespace std;

char king[5], rock[5];
int n;
int k_row, k_col, r_row, r_col;

int dx[] = {1, -1, 0, 0, 1, -1, 1, -1};
int dy[] = {0, 0, -1, 1, 1, 1, -1, -1};

int main(){
  scanf("%s %s %d", king, rock, &n);
  k_row = king[0]-'A';
  k_col = king[1]-'1';
  r_row = rock[0]-'A';
  r_col = rock[1]-'1';
  
  char move[5]={0};
  int dir;
  for(int i=0;i<n;i++){
    scanf("%s", move);
    if(move[0] == 'R' && strlen(move) == 1) dir = 0;
    else if(move[0] == 'L' && strlen(move) == 1) dir = 1;
    else if(move[0] == 'B' && strlen(move) == 1) dir = 2;
    else if(move[0] == 'T' && strlen(move) == 1) dir = 3;
    else if(move[0] == 'R' && move[1] == 'T') dir = 4;
    else if(move[0] == 'L' && move[1] == 'T') dir = 5;
    else if(move[0] == 'R' && move[1] == 'B') dir = 6;
    else dir = 7;
    
    if(k_row+dx[dir] < 0 || k_row+dx[dir] > 7) continue;
    if(k_col+dy[dir] < 0 || k_col+dy[dir] > 7) continue;
    
    if(k_row+dx[dir] == r_row && k_col+dy[dir] == r_col){
      if(r_row+dx[dir] < 0 || r_row+dx[dir] > 7) continue;
      if(r_col+dy[dir] < 0 || r_col+dy[dir] > 7) continue;
      k_row += dx[dir], k_col += dy[dir], r_row += dx[dir], r_col += dy[dir];
    }
    else k_row += dx[dir], k_col += dy[dir];
  }
  printf("%c%d\n%c%d\n", k_row+'A', k_col+1, r_row+'A', r_col+1);
  return 0;
}
