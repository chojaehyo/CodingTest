#include <cstdio>
#include <queue>
using namespace std;
const int MAX = 20;

int N, A[MAX], ans[MAX], result = -2147483648;

void calc(int cnt) {
	int tmp[MAX] = { 0 };
	bool check[MAX] = { 0 };

	for (int i = 0; i < cnt; i++) {
		int val = ans[i];
		int a = A[val - 1];
		int b = A[val + 1];
		check[val - 1] = true;

		if (A[val] == -1) tmp[i] = a + b;
		else if (A[val] == -2) tmp[i] = a - b;
		else tmp[i] = a * b;
	}

	queue <int> q;
	int idx = 0;
	for (int i = 0; i < N;) {
		if (check[i]) {
			q.push(tmp[idx]);
			idx++;
			i += 3;
		}
		else {
			q.push(A[i]);
			i++;
		}
	}

	int total = q.front();
	q.pop();

	while (!q.empty()) {
		int ope = q.front();
		q.pop();
		int b = q.front();
		q.pop();

		if (ope == -1) total += b;
		else if (ope == -2) total -= b;
		else total *= b;
	}
	result = max(result, total);
}

void comb(int idx, int x, int n) {
	if (idx >= n) {
		calc(n);
	}
	else {
		for (int i = x; i < N; i += 2) {
			ans[idx] = i;
			if (idx >= 1 && ans[idx - 1] + 2 == ans[idx]) continue;
			comb(idx + 1, i + 2, n);
		}
	}
}
int main() {
	scanf("%d", &N);
	for (int i = 0; i < N; i++) {
		char c;
		scanf(" %1c", &c);
		if (c == '+') A[i] = -1;
		else if (c == '-') A[i] = -2;
		else if (c == '*') A[i] = -3;
		else A[i] = c - '0';
	}

	int cnt = 0;
	if ((N / 2) % 2 == 0) cnt = N / 4;
	else cnt = (N / 4) + 1;
	
	for (int i = 0; i <= cnt; i++) comb(0, 1, i);
	printf("%d\n", result);
	return 0;
}
