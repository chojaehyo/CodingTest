#include <cstdio>
const int MAX = 55;

int n, m, t, arr[MAX][MAX], tmp[MAX][MAX], wx = -1, wx2 = -1, result;
int dx[] = {-1, 0, 1, 0};
int dy[] = {0, 1, 0, -1};

void spread_dust(){
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(arr[i][j] / 5 <= 0) continue;
            int cnt = 0, val = arr[i][j] / 5;
            for(int d=0;d<4;d++){
                int nx = i + dx[d];
                int ny = j + dy[d];

                if(nx < 0 || nx >= n || ny < 0 || ny >= m) continue;
                if (arr[nx][ny] == -1) continue;
                cnt++;
                tmp[nx][ny] += val;
            }
            arr[i][j] -= cnt * val;
        }
    }

    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            arr[i][j] += tmp[i][j];
            tmp[i][j] = 0;
        }
    }
}

void clearn_dust(){
    for(int i=wx-2;i>=0;i--) arr[i+1][0] = arr[i][0];
    for(int i=1;i<=m-1;i++) arr[0][i-1] = arr[0][i];
    for(int i=1;i<=wx;i++) arr[i-1][m-1] = arr[i][m-1];
    for(int i=m-2;i>=1;i--) arr[wx][i+1] = arr[wx][i];
    arr[wx][1] = 0;

    for(int i=wx2+2;i<=n-1;i++) arr[i-1][0] = arr[i][0];
    for(int i=1;i<=m-1;i++) arr[n-1][i-1] = arr[n-1][i];
    for(int i=n-2;i>=wx2;i--) arr[i+1][m-1] = arr[i][m-1];
    for(int i=m-2;i>=1;i--) arr[wx2][i+1] = arr[wx2][i];
    arr[wx2][1] = 0;
}

void count_result(){
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(arr[i][j] > 0) result += arr[i][j];
        }
    }
}

int main(){
    scanf("%d %d %d", &n, &m, &t);

    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            scanf("%d", &arr[i][j]);
            if(arr[i][j] == -1 && wx == -1) {
                wx = i;
                wx2 = i+1;
            }
        }
    }
    for(int i=0;i<t;i++){
        spread_dust();
        clearn_dust();
    }
    count_result();
    printf("%d\n", result);
    return 0;
}
