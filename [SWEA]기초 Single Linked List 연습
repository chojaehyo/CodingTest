#define MAX_NODE 10000

struct Node {
	int data;
	Node* next;
};

Node node[MAX_NODE];
int nodeCnt;
Node* head;

Node* getNode(int data) {
	node[nodeCnt].data = data;
	node[nodeCnt].next = nullptr;
	return &node[nodeCnt++];
}

void init()
{
	nodeCnt = 0;
    head = getNode(-1);
}

void addNode2Head(int data) 
{
    Node * new_node = getNode(data);
    
    if (head->next == nullptr) head->next = new_node;
    else{
    	new_node->next = head->next;
    	head->next = new_node;
    }
}

void addNode2Tail(int data) 
{
    Node * node = head;
    Node * new_node = getNode(data);
    
    while(node->next){
        node = node->next;
    }
    node->next = new_node;
}

void addNode2Num(int data, int num) 
{
    
    Node * node = head;
    Node * new_node = getNode(data);
    
	for(int i=0;i<num-1;i++) node = node->next;
    
    new_node->next = node->next;
    node->next = new_node;
    
}

void removeNode(int data) 
{
    
	Node * node = head;
    bool find = false;
    
    while(node->next){
        if (node->next->data == data) {
            find = true;
            break;
        }
        node = node->next;
    }
    
    if(find) {
        node->next = node->next->next;
    }
}

int getList(int output[MAX_NODE]) 
{
    
	Node * node = head;
    int cnt = 0;
    while(node->next){
        node = node->next;
        output[cnt++] = node->data;
    }
    return cnt;
    
}
