#include <cstdio>
#include <cstring>
#include <queue>
using namespace std;
const int MAX = 105;

int r, c, k, arr[MAX][MAX], tmp[MAX][MAX], number[MAX];
priority_queue <pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;

void copy_arr(int n, int m){
    for(int i=1;i<=n;i++){
        for(int j=1;j<=m;j++){
            arr[i][j] = tmp[i][j];
        }
    }
}

int main(){
    scanf("%d %d %d", &r, &c, &k);
    for(int i=1;i<=3;i++){
        for(int j=1;j<=3;j++){
            scanf("%d", &arr[i][j]);
        }
    }

    int time = 0, row = 3, col = 3;
    bool flag = false;
    while(1){
        if(arr[r][c] == k) {
            flag = true;
            break;
        }
        if(time >= 100) break;
        if(row >= col){
            memset(tmp, 0, sizeof(tmp));
            for(int i=1;i<=row;i++){
                int idx = 1;
                memset(number, 0, sizeof(number));
                for(int j=1;j<=col;j++) number[arr[i][j]]++;
                for(int j=1;j<=100;j++){
                    if(number[j] > 0) pq.push({number[j], j});
                }
                while(!pq.empty()){
                    int freq = pq.top().first;
                    int num = pq.top().second;
                    pq.pop();
                    if(idx < 99) {
                        tmp[i][idx] = num;
                        tmp[i][idx + 1] = freq;
                        idx += 2;
                    }
                }
                if(col < idx) col = idx;
            }
            copy_arr(row, col);
        }
        else{
            memset(tmp, 0, sizeof(tmp));
            for(int i=1;i<=col;i++){
                int idx = 1;
                memset(number, 0, sizeof(number));
                for(int j=1;j<=row;j++) number[arr[j][i]]++;
                for(int j=1;j<=100;j++){
                    if(number[j] > 0) pq.push({number[j], j});
                }
                while(!pq.empty()){
                    int freq = pq.top().first;
                    int num = pq.top().second;
                    pq.pop();
                    if(idx < 99) {
                        tmp[idx][i] = num;
                        tmp[idx + 1][i] = freq;
                        idx += 2;
                    }
                }
                if(row < idx) row = idx;
            }
            copy_arr(row, col);
        }
        time++;
    }
    if(flag) printf("%d\n", time);
    else printf("-1\n");
    return 0;
}
