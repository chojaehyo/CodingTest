#include <cstdio>
#include <cstring>
using namespace std;
const int MAX = 25;

int N, M, K, arr[MAX][MAX], priority[MAX*MAX][5][5], total_shark;
int dx[] = { -1, 1, 0, 0 };
int dy[] = { 0, 0, -1, 1 };
struct SHARK {
	int x, y, d;
	bool dead;
};
struct SMELL {
	int shark_num, amount;
};
SHARK shark[MAX*MAX];
SMELL smell[MAX][MAX];

void minus_smell() {
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < N; j++) {
			if (smell[i][j].amount > 0) {
				smell[i][j].amount--;
				if (smell[i][j].amount == 0) {
					smell[i][j] = { 0, 0 };
				}
			}
		}
	}
}

void spread_smell() {
	for (int i = 1; i <= M; i++) {
		if (shark[i].dead) continue;

		int x = shark[i].x;
		int y = shark[i].y;
		smell[x][y] = { i, K };
	}
}

void move_shark() {
	memset(arr, 0, sizeof(arr));
	for (int i = 1; i <= M; i++) {
		if (shark[i].dead) continue;
		int x = shark[i].x;
		int y = shark[i].y;
		int d = shark[i].d;
		bool flag = false;
		int dir = -1;
        
		for (int j = 0; j < 4; j++) {
			int nd = priority[i][d][j];
			int nx = x + dx[nd];
			int ny = y + dy[nd];

			if (nx < 0 || nx >= N || ny < 0 || ny >= N) continue;
			if (smell[nx][ny].amount == 0) {
				flag = true;
				if (arr[nx][ny] == 0) {
					arr[nx][ny] = i;
					shark[i].x = nx, shark[i].y = ny, shark[i].d = nd;
				}
				else {
					if (arr[nx][ny] < i) shark[i].dead = true;
					else {
						int num = arr[nx][ny];
						arr[nx][ny] = i;
						shark[num].dead = true;
						shark[i].x = nx, shark[i].y = ny, shark[i].d = nd;
					}
					total_shark--;
				}
                break;
			}
			else {
				if (smell[nx][ny].shark_num == i && dir == -1) dir = nd;
			}
		}
		if (!flag && dir != -1) {
			int nx = x + dx[dir];
			int ny = y + dy[dir];

			arr[nx][ny] = i;
			shark[i].x = nx, shark[i].y = ny, shark[i].d = dir;
		}
	}
}

int main() {
	scanf("%d %d %d", &N, &M, &K);
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < N; j++) {
			scanf("%d", &arr[i][j]);
			if (arr[i][j] > 0) shark[arr[i][j]] = { i, j, 0, false };
		}
	}
	int d;
	for (int i = 1; i <= M; i++) {
		scanf("%d", &d);
		shark[i].d = d - 1;
	}
	for (int i = 1; i <= M; i++) {
		for (int j = 0; j < 4; j++) {
			for (int k = 0; k < 4; k++) {
				scanf("%d", &d);
				priority[i][j][k] = d - 1;
			}
		}
	}
	total_shark = M;
	int time = 0;

	while (1) {
		if (time > 1000) {
			time = -1;
			break;
		}
		if (total_shark == 1) break;
        spread_smell();
		move_shark();
        minus_smell();
		time++;
	}
	printf("%d\n", time);
	return 0;
}
