#include <cstdio>
#include <cstring>
#include <deque>
#include <unordered_map>
#include <algorithm>
using namespace std;

int T, N, K;
deque <int> dq;
unordered_map <int, int> um;
deque <int> result;

void get_number(){
    for(int i=0;i<dq.size();i+= N/4){
        int tmp = 0, val = 1;
        for(int j=i+N/4-1;j>=i;j--){
            tmp += val * dq[j];
            val *= 16;
        }
        if(um.count(tmp)) continue;
        else{
            result.push_back(tmp);
            um[tmp] = 1;
        }
    }
}

int main(){
    scanf("%d", &T);
    for(int t=1;t<=T;t++) {
        dq.clear();
        result.clear();
        um = {};
        scanf("%d %d", &N, &K);

        for(int i=0;i<N;i++){
            char input;
            scanf(" %c", &input);
            if(input >= 'A') dq.push_back(input-'A'+10);
            else dq.push_back(input-'0');
        }
        int cycle = N / 4 - 1;

        for(int i=0;i<=cycle;i++){
            get_number();
            int val = dq.back();
            dq.pop_back();
            dq.push_front(val);
        }
        sort(result.begin(), result.end(), greater<int>());
        printf("#%d %d\n", t, result[K-1]);
    }
    return 0;
}
