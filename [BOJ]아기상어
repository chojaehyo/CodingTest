#include <cstdio>
#include <cstring>
#include <queue>
using namespace std;
const int MAX = 25;

int n, result;
int shark_x, shark_y, shark_size=2, eat=0;
int dist, fish_x, fish_y;
int arr[MAX][MAX], count[MAX][MAX];
struct pos{
    int x, y;
};
int dx[4] = {-1, 0, 1, 0};
int dy[4] = {0, 1, 0, -1};

void find_fish(int a, int b){
    queue <pos> q;
    q.push({a, b});

    while(!q.empty()){
        int x = q.front().x;
        int y = q.front().y;
        q.pop();

        for(int i=0;i<4;i++){
            int nx = x+dx[i];
            int ny = y+dy[i];

            if(nx < 0 || nx >= n || ny < 0 || ny >= n) continue;
            if(count[nx][ny] > 0 || arr[nx][ny] > shark_size) continue;
            
            count[nx][ny] = count[x][y]+1;
            if(arr[nx][ny] != 0 && arr[nx][ny] < shark_size){
                if(dist > count[nx][ny]){
                  fish_x = nx, fish_y = ny;
                  dist = count[nx][ny];
                }
                else if(dist == count[nx][ny]){
                  if(fish_x > nx) fish_x = nx, fish_y = ny;
                  else if(fish_x == nx && fish_y > ny) fish_x = nx, fish_y = ny;
                }
            }
            q.push({nx, ny});
        }
    }
}
int main(){
    scanf("%d", &n);
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            scanf("%d", &arr[i][j]);
            if(arr[i][j] == 9) {
                shark_x = i, shark_y = j;
                arr[i][j] = 0;
            }
        }
    }
    while(1){
        memset(count, 0, sizeof(count));
        dist = 987987987, fish_x=MAX, fish_y=MAX; 
        find_fish(shark_x, shark_y);
        if(fish_x != MAX && fish_y != MAX){
            result += count[fish_x][fish_y];
            eat++;
            if(eat == shark_size){
                shark_size++;
                eat = 0;
            }
            arr[fish_x][fish_y] = 0;
            shark_x = fish_x, shark_y = fish_y;
        }
        else break;
    }
    printf("%d\n", result);
    return 0;
}
