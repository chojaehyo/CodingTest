#include <stdio.h>
#include <cstring>
#include <vector>
#include <queue>
using namespace std;
const int MAX = 55;

int N, M, result = 987987987;
int arr[MAX][MAX], arr2[MAX][MAX], com[15], count[MAX][MAX];
vector <pair <int, int>> v;
bool ck[15], visited[MAX][MAX];
struct loc{
  int x, y;
};
int dx[] = {-1, 0, 1, 0};
int dy[] = {0, 1, 0, -1};

void fill_arr2(){
  for(int i=0;i<N;i++){
    for(int j=0;j<N;j++){
      if(arr[i][j] == 1) arr2[i][j] = 1;
    }
  }
  for(int i=0;i<M;i++) arr2[v[com[i]].first][v[com[i]].second] = 2;
}

void spread(){
  queue <loc> q;
  for(int i=0;i<M;i++) q.push({v[com[i]].first, v[com[i]].second});
  
  while(!q.empty()){
    int x = q.front().x;
    int y = q.front().y;
    visited[x][y] = true;
    q.pop();
    
    for(int i=0;i<4;i++){
      int nx = x+dx[i];
      int ny = y+dy[i];
      
      if(nx < 0 || nx >= N || ny < 0 || ny >= N || arr[x][y] == 1) continue;
      if(!visited[nx][ny] && arr2[nx][ny] == 0){
        visited[nx][ny] = true;
        count[nx][ny] = count[x][y] + 1;
        q.push({nx, ny});
      }
    }
  }
}

bool check(){
  for(int i=0;i<N;i++){
    for(int j=0;j<N;j++){
      if(arr2[i][j] == 0 && count[i][j] == 0) return false;
    }
  }
  return true;
}

int get_time(){
  int ret = -1;
  for(int i=0;i<N;i++){
    for(int j=0;j<N;j++){
      if(ret < count[i][j]) ret = count[i][j];
    }
  }
  return ret;
}

void comb(int idx){
  if(idx >= M){
    memset(arr2, 0, sizeof(arr2));
    memset(visited, 0, sizeof(visited));
    memset(count, 0, sizeof(count));
    fill_arr2();
    spread();
    
    if(check()){
      int val = get_time();
      if(val < result) result = val;
    }
  }
  else{
    for(int i=0;i<v.size();i++){
      com[idx] = i;
      if(!ck[i]){
        ck[i] = true;
        if(idx == 0) comb(idx+1);
        else if(idx >= 1 && com[idx-1] < com[idx]) comb(idx+1);
        ck[i] = false;
      }
    }
  }
}
int main(){
  scanf("%d %d", &N, &M);
  for(int i=0;i<N;i++){
    for(int j=0;j<N;j++){
      scanf("%d", &arr[i][j]);
      if(arr[i][j] == 2) v.push_back({i, j});
    }
  }
  comb(0);
  if(result == 987987987) printf("-1\n");
  else printf("%d\n", result);
  return 0;
}
