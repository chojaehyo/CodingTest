#include <cstdio>
#include <cstring>
#include <queue>
#include <deque>
using namespace std;
const int MAX = 55;

int n, m, q, input, x, d, k;
int dx[] = {-1, 0, 1, 0};
int dy[] = {0, 1, 0, -1};
deque <int> arr[MAX];
bool visited[MAX][MAX];

void rotate(int x, int d, int k){
    if(d == 0){
        int cnt = 1;

        while(cnt * x <= n){
            for(int i=0;i<k;i++){
                arr[cnt * x - 1].push_front(arr[cnt * x - 1].back());
                arr[cnt * x - 1].pop_back();
            }
            cnt++;
        }
    }
    else{
        int cnt = 1;

        while(cnt * x <= n){
            for(int i=0;i<k;i++){
                arr[cnt * x - 1].push_back(arr[cnt * x - 1].front());
                arr[cnt * x - 1].pop_front();
            }
            cnt++;
        }
    }
}

void remove_number(){
    memset(visited, 0, sizeof(visited));
    int total_sum = 0, total_cnt = 0;
    bool remove = false;

    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(arr[i][j] <= 0 || visited[i][j]) continue;
            total_sum += arr[i][j];
            total_cnt++;

            queue <pair<int, int>> q;
            queue <pair<int, int>> same;
            q.push({i, j});
            same.push({i, j});
            visited[i][j] = true;

            while(!q.empty()){
                int x = q.front().first;
                int y = q.front().second;
                int num = arr[x][y];
                q.pop();

                for(int d=0;d<4;d++){
                    int nx = x + dx[d];
                    int ny = y + dy[d];

                    if(nx < 0 || nx >= n) continue;
                    if(ny < 0) ny += m;
                    if(ny >= m) ny -= m;

                    if(!visited[nx][ny] && arr[nx][ny] == num) {
                        visited[nx][ny] = true;
                        q.push({nx, ny});
                        same.push({nx, ny});
                    }
                }
            }

            if(same.size() > 1){
                remove = true;
                while(!same.empty()){
                    int x = same.front().first;
                    int y = same.front().second;
                    same.pop();
                    arr[x][y] = 0;
                }
            }
        }
    }
    if(!remove){
        int avg = total_sum / total_cnt;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(arr[i][j] == 0) continue;
                if(arr[i][j] > avg) arr[i][j]--;
                else if(arr[i][j] < avg) arr[i][j]++;
            }
        }
    }
}

int main(){
    scanf("%d %d %d", &n, &m, &q);
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            scanf("%d", &input);
            arr[i].push_back(input);
        }
    }
    for(int i=0;i<q;i++){
        scanf("%d %d %d", &x, &d, &k);

        rotate(x, d, k);
        remove_number();
    }
    int result = 0;
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            result += arr[i][j];
        }
    }
    printf("%d\n", result);
    return 0;
}
