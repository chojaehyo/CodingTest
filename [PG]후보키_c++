#include <iostream>
#include <string>
#include <vector>
#include <map>
#include <algorithm>
#include <set>
using namespace std;

bool possible(vector<int> v,int cur){
    for(int i = 0; i < v.size(); i++){
        if((v[i] & cur) == v[i]) return false;
    }
    return true;
}

int solution(vector<vector<string>> relation) {
    int r_size = relation.size(); 
    int c_size = relation[0].size();
    vector<int> ans;

    for(int i = 1; i < (1<<c_size); i++){
        set<string> s; 
        for(int j = 0; j < r_size; j++){
            string cur = "";
            for(int k = 0; k < c_size; k++){
                if(i & (1<<k)) cur += relation[j][k];
            }
            s.insert(cur);
        }
        if(s.size() == r_size && possible(ans, i)) ans.push_back(i);
    }
    return (int)ans.size();
}
