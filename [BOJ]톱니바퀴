#include <stdio.h>

int wheel[5][10], wheel2[5][10];
int k;

void spin (int num, int d){
  if(d == 1){
    int tmp = wheel2[num][7];
    for(int i=6;i>=0;i--) wheel2[num][i+1] = wheel2[num][i];
    wheel2[num][0] = tmp;
  }
  else{
    int tmp = wheel2[num][0];
    for(int i=0;i<7;i++) wheel2[num][i] = wheel2[num][i+1];
    wheel2[num][7] = tmp;
  }
}
void check(int num, int d){
  if(d == 1){
    if(num == 0){
      spin(num, d);
      if(wheel[num][2] != wheel[num+1][6]) {
        spin(num+1, -1);
        if(wheel[num+1][2] != wheel[num+2][6]) {
          spin(num+2, 1);
          if(wheel[num+2][2] != wheel[num+3][6]) spin(num+3, -1);
        }
      }
    }
    else if(num == 1){
      spin(num, d);
      if(wheel[num-1][2] != wheel[num][6]) spin(num-1, -1);
      if(wheel[num][2] != wheel[num+1][6]) {
        spin(num+1, -1);
        if(wheel[num+1][2] != wheel[num+2][6]) spin(num+2, 1);
      }
    }
    else if(num == 2){
      spin(num, d);
      if(wheel[num-1][2] != wheel[num][6]) {
        spin(num-1, -1);
        if(wheel[num-2][2] != wheel[num-1][6]) spin(num-2, 1);
      }
      if(wheel[num][2] != wheel[num+1][6]) spin(num+1, -1);
    }
    else{
      spin(num, d);
      if(wheel[num-1][2] != wheel[num][6]) {
        spin(num-1, -1);
        if(wheel[num-2][2] != wheel[num-1][6]) {
          spin(num-2, 1);
          if(wheel[num-3][2] != wheel[num-2][6]) spin(num-3, -1);
        }
      }
    }
  }
  else{
    if(num == 0){
      spin(num, d);
      if(wheel[num][2] != wheel[num+1][6]) {
        spin(num+1, 1);
        if(wheel[num+1][2] != wheel[num+2][6]) {
          spin(num+2, -1);
          if(wheel[num+2][2] != wheel[num+3][6]) spin(num+3, 1);
        }
      }
    }
    else if(num == 1){
      spin(num, d);
      if(wheel[num-1][2] != wheel[num][6]) spin(num-1, 1);
      if(wheel[num][2] != wheel[num+1][6]) {
        spin(num+1, 1);
        if(wheel[num+1][2] != wheel[num+2][6]) spin(num+2, -1);
      }
    }
    else if(num == 2){
      spin(num, d);
      if(wheel[num-1][2] != wheel[num][6]) {
        spin(num-1, 1);
        if(wheel[num-2][2] != wheel[num-1][6]) spin(num-2, -1);
      }
      if(wheel[num][2] != wheel[num+1][6]) spin(num+1, 1);
    }
    else{
      spin(num, d);
      if(wheel[num-1][2] != wheel[num][6]) {
        spin(num-1, 1);
        if(wheel[num-2][2] != wheel[num-1][6]) {
          spin(num-2, -1);
          if(wheel[num-3][2] != wheel[num-2][6]) spin(num-3, 1);
        }
      }
    }
  }
}
void fill_wheel(){
  for(int i=0;i<4;i++){
    for(int j=0;j<8;j++){
      wheel[i][j] = wheel2[i][j];
    }
  }
}
int main(){
  for(int i=0;i<4;i++){
    for(int j=0;j<8;j++){
      scanf("%1d", &wheel[i][j]);
      wheel2[i][j] = wheel[i][j];
    }
  }
  scanf("%d", &k);
  for(int i=0;i<k;i++){
    int w_num, dir;
    scanf("%d %d", &w_num, &dir);
    check(w_num-1, dir);
    fill_wheel();
  }
  int result = 0;
  result += wheel[0][0]*1;
  result += wheel[1][0]*2;
  result += wheel[2][0]*4;
  result += wheel[3][0]*8;
  printf("%d", result);
  return 0;
}
