#include <string>
#include <vector>
#include <deque>
using namespace std;
const int MAX = 105;
vector<int> solution(int rows, int columns, vector<vector<int>> queries) {
    vector<int> answer;
    
    int arr[MAX][MAX] = {0}, val = 1;
    for(int i=0;i<rows;i++){
        for(int j=0;j<columns;j++){
            arr[i][j] = val++;
        }
    }
    deque <int> number;
    deque <pair<int, int>> points;
    
    for(auto q: queries){
        int min_val = 10005;
        number.clear();
        points.clear();
        
        for(int j=q[1]-1;j<q[3];j++){
            if (min_val > arr[q[0]-1][j]) min_val = arr[q[0]-1][j];
            number.push_back(arr[q[0]-1][j]);
            points.push_back({q[0]-1, j});
        }
        for(int i=q[0];i<q[2];i++){
            if (min_val > arr[i][q[3]-1]) min_val = arr[i][q[3]-1];
            number.push_back(arr[i][q[3]-1]);
            points.push_back({i, q[3]-1});
        }
        for(int j=q[3]-2;j>=q[1]-1;j--){
            if (min_val > arr[q[2]-1][j]) min_val = arr[q[2]-1][j];
            number.push_back(arr[q[2]-1][j]);
            points.push_back({q[2]-1, j});
        }
        for(int i=q[2]-2;i>=q[0];i--){
            if (min_val > arr[i][q[1]-1]) min_val = arr[i][q[1]-1];
            number.push_back(arr[i][q[1]-1]);
            points.push_back({i, q[1]-1});
        }
        
        int num = number.back();
        number.pop_back();
        number.push_front(num);
        
        for(int i=0;i<points.size();i++){
            int x = points[i].first;
            int y = points[i].second;
            arr[x][y] = number[i];
        }
        answer.push_back(min_val);
    }
    return answer;
}
