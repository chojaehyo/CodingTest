#include <stdio.h>
#include <queue>
using namespace std;
const int MAX = 105;

int m, n, h;
int total;
int box[MAX][MAX][MAX];
struct loc{
  int z, x, y, days; 
};
int dx[] = {-1, 1, 0, 0, 0, 0};
int dy[] = {0, 0, -1, 1, 0, 0};
int dz[] = {0, 0, 0, 0, -1, 1};
bool visited[MAX][MAX][MAX];
queue <loc> q;

int bfs(){
  int ret; 
  while(!q.empty()){
    int z = q.front().z;
    int x = q.front().x;
    int y = q.front().y;
    int days = q.front().days;
    visited[z][x][y] = true;
    q.pop();
    
    for(int i=0;i<6;i++){
      int nz = z+dz[i];
      int nx = x+dx[i];
      int ny = y+dy[i];
      
      if(nx < 0 || nx >= n || ny < 0 || ny >= m || nz < 0 || nz >= h || box[nz][nx][ny] == -1) continue;
      if(!visited[nz][nx][ny] && box[nz][nx][ny] == 0){
        visited[nz][nx][ny] = true;
        ret = days+1;
        total--;
        q.push({nz, nx, ny, days+1});
      }
    }
  }
  return ret;
}
int main(){
  scanf("%d %d %d", &m, &n, &h);
  for(int k=0;k<h;k++){
    for(int i=0;i<n;i++){
      for(int j=0;j<m;j++){
        scanf("%d", &box[k][i][j]);
        if(!box[k][i][j]) total++;
      }
    }
  }
  if(!total) printf("0\n");
  else{
    for(int k=0;k<h;k++){
      for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
          if(!visited[k][i][j] && box[k][i][j] == 1){
            q.push({k, i, j, 0});
          }
        }
      }
    }
    int result = bfs();
    if(total > 0) printf("-1\n");
    else printf("%d\n", result);
  }
  return 0;
}
