#include <stdio.h>
#include <cstring>
using namespace std;
const int MAX = 505;

int n, m, result, arr[MAX][MAX], dp[MAX][MAX];
int dx[] = { 0, 1, 0, -1 };
int dy[] = { -1, 0, 1, 0 };

int dfs(int x, int y) {
	if (x == n - 1 && y == m - 1) return 1;
	if (dp[x][y] != -1) return dp[x][y];

	dp[x][y] = 0;
	for (int i = 0; i < 4; i++) {
		int nx = x + dx[i];
		int ny = y + dy[i];

		if (nx < 0 || nx >= n || ny < 0 || ny >= m) continue;
		if (arr[x][y] > arr[nx][ny]) {
			dp[x][y] = dp[x][y] + dfs(nx, ny);
		}
	}
	return dp[x][y];
}
int main() {
	scanf("%d %d", &n, &m);
	
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			scanf("%d", &arr[i][j]);
		}
	}
	memset(dp, -1, sizeof(dp));
	result = dfs(0, 0);
	printf("%d\n", result);
	return 0;
}
