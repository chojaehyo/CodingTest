#include <stdio.h>
const int MAX = 1005;

struct NODE {
    bool isdigit;
    int val, left, right;
} node[MAX];

int calc(int idx) {
    if(node[idx].isdigit) return node[idx].val;
    int a = calc(node[idx].left);
    int b = calc(node[idx].right);
    if (node[idx].val == -1) return a + b;
    else if (node[idx].val == -2) return a - b;
    else if (node[idx].val == -3) return a * b;
    else if (node[idx].val == -4) return a / b;
    else return -1;
}

int main() {
    for(int t=1;t<=10;t++) {
        int N; scanf("%d", &N);
        
        for(int i=0;i<N;i++) {
            int idx; char str[10];
            scanf("%d %s", &idx, str);
            idx--;
            
            if(str[0] - '0' >= 0 && str[0] - '0' <= 9) {
                node[idx].isdigit = true;
                int num = str[0] - '0';
                for(int j=1;str[j] != NULL;j++)  num  = (num * 10) + (str[j] - '0');
                node[idx].val = num;
            } 
            else {
                node[idx].isdigit = false;
                
                if (str[0] == '+') node[idx].val = -1;
                else if (str[0] == '-') node[idx].val = -2;
                else if (str[0] == '*') node[idx].val = -3;
                else node[idx].val = -4;
                
                int ch1, ch2;
                scanf("%d %d", &ch1, &ch2);
                ch1--; ch2--;
                node[idx].left = ch1;
                node[idx].right = ch2;
            }
        }
        printf("#%d %d\n", t, calc(0));
    }
    return 0;
}
