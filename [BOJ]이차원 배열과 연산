#include <stdio.h>
#include <cstring>
#include <vector>
#include <algorithm>
using namespace std;
const int MAX = 101;

int r, c, k;
int arr[MAX][MAX];
int row = 3, col = 3;

bool cmp(pair<int, int> a, pair<int, int> b){
  if(a.second < b.second) return true;
  else if(a.second == b.second){
    if(a.first < b.first) return true;
    else return false;
  }
  else return false;
}

void r_ope(){
  for(int i=1;i<=row;i++){
    vector<pair <int, int>> v;
    int num[MAX]={0};
    
    for(int j=1;j<=col;j++) num[arr[i][j]]++;
    
    for(int j=1;j<MAX;j++){
      if(num[j] >= 1) v.push_back({j, num[j]});
    }
    sort(v.begin(), v.end(), cmp);
    
    int idx = 1;
    for(int j=0;j<=col;j++) arr[i][j] = 0;
    for(int j=0;j<v.size();j++){
      arr[i][idx++] = v[j].first;
      arr[i][idx++] = v[j].second;
    }
    idx--;
    if(col < idx) col = idx;
    if(col > 100) col = 100;
  }
}

void c_ope(){
  for(int j=1;j<=col;j++){
    vector<pair <int, int>> v;
    int num[MAX] = {0};
    
    for(int i=1;i<=row;i++) num[arr[i][j]]++;
    
    for(int i=1;i<MAX;i++){
      if(num[i] >= 1) v.push_back({i, num[i]});
    }
    sort(v.begin(), v.end(), cmp);
    
    int idx = 1;
    for(int i=1;i<=row;i++) arr[i][j] = 0;
    for(int i=0;i<v.size();i++){
      arr[idx++][j] = v[i].first;
      arr[idx++][j] = v[i].second;
    }
    idx--;
    if(row < idx) row = idx;
    if(row > 100) row = 100;
  }
}

int main(){
  scanf("%d %d %d", &r, &c, &k);
  for(int i=1;i<=3;i++){
    for(int j=1;j<=3;j++){
      scanf("%d", &arr[i][j]);
    }
  }
  
  int Time = 0;
  while(Time <= 100){
    if(arr[r][c] == k) {
      printf("%d\n", Time);
      return 0;
    }
    
    if(row >= col) r_ope();
    else if(row < col) c_ope();
    Time++;
  }
  printf("-1\n");
  return 0;
}
