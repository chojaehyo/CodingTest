#include <stdio.h>
#include <queue>
using namespace std;
const int MAX = 105;

int n, m, k, arr[MAX][MAX];
int dx[] = { -1, 0, 1, 0 };
int dy[] = { 0, 1, 0, -1 };

int main() {
	scanf("%d\n%d", &n, &k);

	for (int i = 0; i < k; i++) {
		int a, b;
		scanf("%d %d", &a, &b);
		arr[a][b] = 1;
	}

	scanf("%d", &m);
	queue <pair<int, char>> q;

	for (int i = 0; i < m; i++) {
		int x;
		char c;
		scanf("%d %c", &x, &c);
		q.push(make_pair(x, c));
	}

	int time = 0;
	int x = 1, y = 1, d = 1;
	arr[x][y] = 2;

	queue <pair<int, int>> snake;
	snake.push(make_pair(x, y));
	while (1) {
		if (!q.empty() && time == q.front().first) {
			char dir = q.front().second;
			q.pop();

			if (dir == 'L') d = (d + 3) % 4;
			else d = (d + 1) % 4;
		}
		int nx = x + dx[d];
		int ny = y + dy[d];

		if (nx < 1 || nx > n || ny < 1 || ny > n || arr[nx][ny] == 2) break;
			
		if (arr[nx][ny] == 1) {
			snake.push(make_pair(nx, ny));
			arr[nx][ny] = 2;
		}
		else {
			snake.push(make_pair(nx, ny));
			arr[nx][ny] = 2;
			int sx = snake.front().first;
			int sy = snake.front().second;
			snake.pop();
			arr[sx][sy] = 0;
		}
		x = nx, y = ny;
		time++;
	}
	printf("%d\n", time+1);
	return 0;
}
