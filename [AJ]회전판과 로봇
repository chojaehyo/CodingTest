#include <cstdio>
#include <cstring>
using namespace std;
const int MAX = 505;

int T, N, M, x, y;
int K, L, result, cur;
int arr[MAX][MAX], number[MAX];
struct INFO{
  int dir, clockwise, cnt; 
};
INFO move[MAX];
int dx[] = {-1, 0, 1, 0};
int dy[] = {0, 1, 0, -1};

void move_robot(int idx, int r_cnt){
  int dir = move[idx].dir;
  result += arr[x][y];
  arr[x][y] = 0;
  
  for(int i=0;i<r_cnt;i++){
    int nx = x+dx[dir];
    int ny = y+dy[dir];
        
    if(nx < 1 || nx > M || ny < 1 || ny > N || arr[nx][ny] == -1) return;

    result += arr[nx][ny];
    arr[nx][ny] = 0;
    x = nx,  y = ny;
  }
}
int get_move_cnt(int idx){
  int dir = move[idx].clockwise;
  int cnt = move[idx].cnt;
  
  int n_cnt = cnt%K;
  
  if(dir == 1){
    for(int i=0;i<n_cnt;i++){
      cur--;
      if(cur == -1) cur = K-1;
    }
    return number[cur];
  }
  else{
    for(int i=0;i<n_cnt;i++){
      cur++;
      if(cur == K) cur = 0;
    }
    return number[cur];
  }
}
int main(){
  scanf("%d", &T);
  for(int t=1;t<=T;t++){
    scanf("%d %d %d %d", &N, &M, &y, &x);
    result = 0, cur = 0;
    memset(number, 0, sizeof(number));
    memset(arr, 0, sizeof(arr));
    memset(move, 0, sizeof(move));
    for(int i=1;i<=M;i++){
      for(int j=1;j<=N;j++){
        scanf("%d", &arr[i][j]);
      }
    }
    scanf("%d", &K);
    for(int i=0;i<K;i++) scanf("%d", &number[i]);
    
    scanf("%d", &L);
    for(int i=0;i<L;i++) {
      char a;
      int b, c, d;
      scanf(" %c %d %d", &a, &b, &c);
      if(a == 'E') d = 1;
      else if(a == 'W') d = 3;
      else if(a == 'S') d = 2;
      else if(a == 'N') d = 0;
      move[i] = {d, b, c};
    }
    for(int i=0;i<L;i++){
      int r_cnt = get_move_cnt(i);
      move_robot(i, r_cnt);
    }
    printf("#%d %d %d %d\n", t, result, y, x);
  }
  return 0;
}
