#include <stdio.h>
#include <queue>
#include <cstring>
using namespace std;
const int MAX = 15;

int arr[MAX][MAX];
bool visited[MAX][MAX];
int dx[] = {-1, 0, 1, 0};
int dy[] = {0, 1, 0, -1};
struct loc{
  int x, y;
};

bool check(int a, int b, int val){
  visited[a][b] = true;
  queue <loc> q;
  queue <loc> q2;
  q.push({a, b});
  q2.push({a, b});
  
  while(!q.empty()){
    int x = q.front().x;
    int y = q.front().y;
    q.pop();
    
    for(int i=0;i<4;i++){
      int nx = x+dx[i];
      int ny = y+dy[i];
      
      if(nx < 0 || nx >= 12 || ny < 0 || ny >= 6) continue;
      if(!visited[nx][ny] && arr[nx][ny] == val){
        q.push({nx, ny});
        q2.push({nx, ny});
        visited[nx][ny] = true;
      }
    }
  }
  
  if(q2.size() >= 4){
    while(!q2.empty()){
      int x = q2.front().x;
      int y = q2.front().y;
      q2.pop();
      
      arr[x][y] = 0;
    }
    return true;
  }
  return false;
}
void down(){
  for(int j=0;j<6;j++){
    while(1) {
      bool ck = false;
      for(int i=10;i>=0;i--){
        if(arr[i][j] > 0 && arr[i+1][j] == 0){
          arr[i+1][j] = arr[i][j];
          arr[i][j] = 0;
          ck = true;
        }
      }
      if(!ck) break;
    }
  }
}
int main(){
  for(int i=0;i<12;i++){
    for(int j=0;j<6;j++){
      char a;
      scanf(" %c", &a);
      if(a == '.') arr[i][j] = 0;
      else if(a == 'R') arr[i][j] = 1;
      else if(a == 'G') arr[i][j] = 2;
      else if(a == 'B') arr[i][j] = 3;
      else if(a == 'P') arr[i][j] = 4;
      else arr[i][j] = 5;
    }
  }
  int result = 0;
  while(1){
    bool flag = false;
    memset(visited, 0, sizeof(visited));
    for(int i=0;i<12;i++){
      for(int j=0;j<6;j++){
        if(!visited[i][j] && arr[i][j]){
          bool res = check(i, j, arr[i][j]);
          if(res) flag = true;
        }
      }
    }
    if(!flag) break;
    else down();
    result++;
  }
  printf("%d\n", result);
  return 0;
}
