#include <cstdio>
#include <queue>
using namespace std;
const int MAX = 300005;

int n, m, k, x;

vector <pair<int,int>> arr[MAX];
int dist[MAX];

void get_dist(int start){
    priority_queue <pair<int,int>, vector<pair<int,int>>, greater<pair<int,int>>> pq;
    pq.push({ 0, start });
    dist[start] = 0;
    
    while(!pq.empty()){
        int cost = pq.top().first;
        int cur = pq.top().second;
        pq.pop();
        
        if(cost > dist[cur]) continue;
        for(int i = 0; i < arr[cur].size(); i++){
            int next = arr[cur][i].second;
            int nextCost = arr[cur][i].first;
            if(cost + nextCost < dist[next]){
                dist[next] = cost + nextCost;
                pq.push({dist[next], next});
            }
        }
    }
}

int main(){
    scanf("%d %d %d %d", &n, &m, &k, &x);
    fill_n(dist, MAX, 987987987);
    for(int i = 0; i < m; i++){
        int u, v;
        scanf("%d %d", &u, &v);
        arr[u].push_back({ 1, v });
    }
    get_dist(x);
    
    int check = 0;
    for(int i = 1; i <= n;i++) {
        if(dist[i] == k) {
            printf("%d\n", i);
            check = 1;
        }
    }
    if(!check) printf("-1\n");
}
