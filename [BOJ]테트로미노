#include <stdio.h>
#include <algorithm>
using namespace std;
const int MAX = 505;

int N, M, answer;
int arr[MAX][MAX];
int dx[] = {-1, 0, 1, 0};
int dy[] = {0, 1, 0, -1};
bool visited[MAX][MAX]; 

void get_max(int x, int y, int total, int cnt){
  visited[x][y] = true;
  if(cnt == 4) {
    answer = max(answer, total);
    return;
  }
  for(int i=0;i<4;i++){
    int nx = x+dx[i];
    int ny = y+dy[i];
    
    if(nx < 0 || nx >= N || ny < 0 || ny >= M) continue;
    if(!visited[nx][ny]){
      visited[nx][ny] = true;
      get_max(nx, ny, total+arr[nx][ny], cnt+1);
      visited[nx][ny] = false;
    }
  }
}
void get_val(int x, int y){
  int result = 0;
  if(x >= 1 && x < N-1 && y < M-1){
    result = max(result, arr[x-1][y]+arr[x][y]+arr[x][y+1]+arr[x+1][y]);
  }
  if(y >= 1 && y < M-1 && x < N-1){
    result = max(result, arr[x][y-1]+arr[x][y]+arr[x][y+1]+arr[x+1][y]);
  }
  if(x >= 1 && x < N-1 && y >= 1){
    result = max(result, arr[x-1][y]+arr[x][y]+arr[x][y-1]+arr[x+1][y]);
  }
  if(y >= 1 && y < M-1 && x >= 1){
    result = max(result, arr[x][y-1]+arr[x][y]+arr[x][y+1]+arr[x-1][y]);
  }
  answer = max(answer, result);
}
int main(){
  scanf("%d %d", &N, &M);
  for(int i=0;i<N;i++){
    for(int j=0;j<M;j++){
      scanf("%d", &arr[i][j]);
    }
  }
  
  for(int i=0;i<N;i++){
    for(int j=0;j<M;j++){
      get_max(i, j, arr[i][j], 1);
      get_val(i, j);
      visited[i][j] = false;
    }
  }
  
  printf("%d\n", answer);
}
